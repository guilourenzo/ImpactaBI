install.packages("TeachingDemos")
install.packages(c("car", "RcmdrMisc", "RcmdrPlugin.KMggplot2", "RcmdrPlugin.plotByGroup", "RcmdrPlugin.TeachingDemos", "rJava", "XLConnect"))
install.packages("swirl")
q()
library("Rcmdr", lib.loc="~/R/win-library/3.2")
library("RcmdrMisc", lib.loc="~/R/win-library/3.2")
library("Rcmdr", lib.loc="~/R/win-library/3.2")
install.packages("proto")
library("Rcmdr", lib.loc="~/R/win-library/3.2")
install.packages("reshape2")
library("Rcmdr", lib.loc="~/R/win-library/3.2")
library("swirl", lib.loc="~/R/win-library/3.2")
install.packages("swirl")
cls
mtcars$wt
mean(mtcars$wt)
sd(mtcars$wt)
(3+4)/2
install.packages(plyr)
install.packages(plyr)
install.packages("plyr")
library(plyr)
count(mtcars$wt)
plot(mtcars$mpg, mtcars$wt)
persp(volcano, expand=0.2)
elevation <- matrix(1, 10, 10)
elevation[4, 6] <- 0
persp(elevation)
persp(elevation, expand=0.2)
contour(volcano)
contour(volcano)
persp(volcano, expand=0.2)
image(volcano)
volcano
View(elevation)
View(elevation)
View(volcano)
pounds <- c(45000, 50000, 35000, 40000, 35000, 45000, 10000, 15000)
barplot(pounds)
meanValue <- mean(pounds)
abline(h = meanValue)
deviatio <- sd(meanValue)
deviatio
deviatio <- sd(pounds)
deviatio
abline(h = meanValue + deviatio)
abline(h = (- deviation) + meanValue + deviatio)
abline(h = (- deviatio) + meanValue + deviatio)
adline(h = meanValue + deviatio)
abline(h = deviatio + meanValue + deviatio)
abline(h = deviatio - meanValue + deviatio)
abline(h = meanValue + deviatio + deviatio )
abline(h = (deviatio*-1))
deviatio * -1
abline(h = (deviatio*-1)+ meanValue + deviatio )
abline(h = meanValue - deviatio + meanValue + deviatio )
abline(h = meanValue - deviatio)
meanValue - deviatio + meanValue + deviatio
meanValue - deviatio
meanValue + deviatio
meanValue
weights <- c(300, 200, 100, 250, 150)prices <- c(9000, 5000, 12000, 7500, 18000)
weights <- c(300, 200, 100, 250, 150)
prices <- c(9000, 5000, 12000, 7500, 18000)
plot(weights,prices)
plot(weights, prices, pch=as.integer(types))
chests <- c('gold', 'silver', 'gems', 'gold', 'gems')
types <- factor(chests)
plot(weights, prices, pch=as.integer(types))
legend("topright", c("gems", "gold", "silver"), pch=1:3)
legend("upright", c("gems", "gold", "silver"), pch=1:3)
legend("center", c("gems", "gold", "silver"), pch=1:3)
plot(weights, prices, pch=as.integer(types))
legend("center", c("gems", "gold", "silver"), pch=1:3)
plot(weights, prices, pch=as.integer(types))
legend("topright", c("gems", "gold", "silver"), pch=1:3)
legend("topright", levels(types), pch=1:length(levels(types)))
treasure <- data.frame(weights, prices, types)
print(treasure)
treasure[[2]]
treasure[["weights"]]
treasure$prices
list.files()
[]
read.csv(target.csv)
read.csv("target.csv")
read.csv("target.csv")
read.csv("target.csv")
read.csv("target_.csv")
read.csv("target.csv")
read.csv("target.csv")
read.csv("target.csv")
read.table("infantry.txt", sep="\t")
read.table("infantry.txt", sep="\t")
read.csv("target.csv")
read.table("infantry.txt", sep="\t")
read.table("infantry.txt", sep="\t")
read.csv("target.csv")
read.table("infantry.txt", sep="\t")
read.table("infantry.txt", sep="\t", header = TRUE)
targets <- read.csv("target.csv")
infantry <- read.table("infantry.txt", sep="\t", header = TRUE)
merge(x = targets, y = infantry)
targets <- read.csv("target.csv")
infantry <- read.table("infantry.txt", sep="\t", header = TRUE)
merge(x = targets, y = infantry)
piracy <- read.csv("piracy.csv")
gdp <- read.table("gdp.txt", sep = "\t",header = TRUE)
gdp <- read.table("gdp.txt", sep = "  ",header = TRUE)
gdp <- read.table("gdp.txt", sep = "\t",header = TRUE)
gdp <- read.table("gdp.txt", sep = "\t",header = TRUE)
gdp <- read.table("gdp.txt", sep = "\t",header = TRUE)
gdp <- read.table("gdp.txt", sep = ";",header = TRUE)
gdp <- read.csv2("gdp.csv")
piracy <- read.csv("piracy.csv")
countries <- merge(x = gdp, y = piracy)
plot(countries$GDP, countries$Piracy)
View(gdp)
View(piracy)
View(gdp)
gdp <- read.csv2("gdp.csv")
countries <- merge(x = gdp, y = piracy)
cor.test(countries$GDP, countries$Piracy)
line <- lm(countries$Piracy ~ countries$GDP)
abline(line)
install.packages("ggplot2")
help(package = "ggplot2")
library("ggplot2")
qplot(weights, prices, color = types)
q()
ls()
help
clear()
setwd(C:\Users\guilo\Google Drive\IMPACTA\AULAS\ANÁLISE EXPLORATÓRIA DE DADOS\BASES)
setwd("C:\Users\guilo\Google Drive\IMPACTA\AULAS\ANÁLISE EXPLORATÓRIA DE DADOS\BASES)
setwd(C:\"Users\guilo\Google Drive\IMPACTA\AULAS\ANÁLISE EXPLORATÓRIA DE DADOS\BASES)
library(Rserve)
Rserve(args="--RS-conf D:\\Documentos\\R\\win-library\\3.4\\Rserve\\libs\\x64\\Rserve.cfg")
q)
q()
library(Rserve)
Rserve(args="--RS-conf D:\\Documentos\\R\\win-library\\3.4\\Rserve\\libs\\x64\\Rserve.cfg")
close(Rserve)
help("Rserve")
library(Rserve)
Rserve()
setwd("C:\\Users\\guilo\\Google Drive\\IMPACTA\\AULAS\\ANÁLISE EXPLORATÓRIA DE DADOS\\TRABALHOS\\Population")
population <- read.table("POPULATION_KEY_INDICATORS.csv", header = TRUE, sep = ";")
names(population)
str(population)
pop2014 <- subset(population, population$Time = 2014)
pop2014 <- subset(population, population$Time = "2014")
pop2014 <- subset(population, population$Time == 2014)
popu2014 <- pop2014[order(pop2014$Population..total..SP.POP.TOTL., decreasing = FALSE),]
popu2014
View(popu2014)
popu2014 <- pop2014[order(pop2014$Population..total..SP.POP.TOTL.),]
View(popu2014)
population <- read.table("POPULATION_KEY_INDICATORS.csv", header = TRUE, sep = ";")
str(population)
pop2014 <- subset(population, population$Time == 2014)
popu2014 <- pop2014[order(pop2014$Population..total..SP.POP.TOTL.),]
View(popu2014)
popu2014 <- pop2014[order(pop2014$Population..total..SP.POP.TOTL., decreasing = TRUE),]
View(popu2014)
head(popu2014, 50)
View(popu2014, 50)
View(popu2014)
